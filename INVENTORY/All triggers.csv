schema_name,table_name,trigger_name,trigger_def
app2,plans,_bu_set_updated_at,CREATE TRIGGER _bu_set_updated_at BEFORE UPDATE ON app2.plans FOR EACH ROW EXECUTE FUNCTION set_updated_at()
app2,plans,_bu_set_updated_at_plans,CREATE TRIGGER _bu_set_updated_at_plans BEFORE UPDATE ON app2.plans FOR EACH ROW EXECUTE FUNCTION app2.set_updated_at()
app2,plans,t_plans_touch,CREATE TRIGGER t_plans_touch BEFORE UPDATE ON app2.plans FOR EACH ROW EXECUTE FUNCTION app2.touch_updated_at()
app2,profiles,_bu_set_updated_at,CREATE TRIGGER _bu_set_updated_at BEFORE UPDATE ON app2.profiles FOR EACH ROW EXECUTE FUNCTION set_updated_at()
app2,profiles,_bu_set_updated_at_profiles,CREATE TRIGGER _bu_set_updated_at_profiles BEFORE UPDATE ON app2.profiles FOR EACH ROW EXECUTE FUNCTION app2.set_updated_at()
app2,session_exercises,_bu_set_updated_at,CREATE TRIGGER _bu_set_updated_at BEFORE UPDATE ON app2.session_exercises FOR EACH ROW EXECUTE FUNCTION set_updated_at()
app2,session_exercises,_bu_set_updated_at_session_exercises,CREATE TRIGGER _bu_set_updated_at_session_exercises BEFORE UPDATE ON app2.session_exercises FOR EACH ROW EXECUTE FUNCTION app2.set_updated_at()
app2,session_exercises,t_session_exercises_touch,CREATE TRIGGER t_session_exercises_touch BEFORE UPDATE ON app2.session_exercises FOR EACH ROW EXECUTE FUNCTION app2.touch_updated_at()
app2,sessions,_bu_set_updated_at,CREATE TRIGGER _bu_set_updated_at BEFORE UPDATE ON app2.sessions FOR EACH ROW EXECUTE FUNCTION set_updated_at()
app2,sessions,_bu_set_updated_at_sessions,CREATE TRIGGER _bu_set_updated_at_sessions BEFORE UPDATE ON app2.sessions FOR EACH ROW EXECUTE FUNCTION app2.set_updated_at()
app2,sessions,t_sessions_touch,CREATE TRIGGER t_sessions_touch BEFORE UPDATE ON app2.sessions FOR EACH ROW EXECUTE FUNCTION app2.touch_updated_at()
auth,users,on_auth_user_created,CREATE TRIGGER on_auth_user_created AFTER INSERT ON auth.users FOR EACH ROW EXECUTE FUNCTION app2.handle_new_user()
auth,users,on_auth_user_created_app2_profile,CREATE TRIGGER on_auth_user_created_app2_profile AFTER INSERT ON auth.users FOR EACH ROW EXECUTE FUNCTION app2.handle_new_user()
preserve,exercise_library_i18n,t_upd_exercise_library_i18n,CREATE TRIGGER t_upd_exercise_library_i18n BEFORE UPDATE ON preserve.exercise_library_i18n FOR EACH ROW EXECUTE FUNCTION set_updated_at()
preserve,exercise_variant_i18n,t_upd_exercise_variant_i18n,CREATE TRIGGER t_upd_exercise_variant_i18n BEFORE UPDATE ON preserve.exercise_variant_i18n FOR EACH ROW EXECUTE FUNCTION set_updated_at()
realtime,subscription,tr_check_filters,CREATE TRIGGER tr_check_filters BEFORE INSERT OR UPDATE ON realtime.subscription FOR EACH ROW EXECUTE FUNCTION realtime.subscription_check_filters()
storage,buckets,enforce_bucket_name_length_trigger,CREATE TRIGGER enforce_bucket_name_length_trigger BEFORE INSERT OR UPDATE OF name ON storage.buckets FOR EACH ROW EXECUTE FUNCTION storage.enforce_bucket_name_length()
storage,objects,objects_delete_delete_prefix,CREATE TRIGGER objects_delete_delete_prefix AFTER DELETE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger()
storage,objects,objects_insert_create_prefix,CREATE TRIGGER objects_insert_create_prefix BEFORE INSERT ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.objects_insert_prefix_trigger()
storage,objects,objects_update_create_prefix,CREATE TRIGGER objects_update_create_prefix BEFORE UPDATE ON storage.objects FOR EACH ROW WHEN (new.name <> old.name OR new.bucket_id <> old.bucket_id) EXECUTE FUNCTION storage.objects_update_prefix_trigger()
storage,objects,update_objects_updated_at,CREATE TRIGGER update_objects_updated_at BEFORE UPDATE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.update_updated_at_column()
storage,prefixes,prefixes_create_hierarchy,CREATE TRIGGER prefixes_create_hierarchy BEFORE INSERT ON storage.prefixes FOR EACH ROW WHEN (pg_trigger_depth() < 1) EXECUTE FUNCTION storage.prefixes_insert_trigger()
storage,prefixes,prefixes_delete_hierarchy,CREATE TRIGGER prefixes_delete_hierarchy AFTER DELETE ON storage.prefixes FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger()